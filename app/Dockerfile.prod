###########
# BUILDER #
###########

# pull official base image
FROM python:3.9 as builder

# set work directory
WORKDIR /usr/src/app

# set environment variables
ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1

# install system dependencies
RUN apt-get update \
  && apt-get install python3-dev default-libmysqlclient-dev gcc  -y \
  && apt-get clean

# install dependencies
RUN pip install --upgrade pip
COPY ./requirements.txt .
RUN pip wheel --no-cache-dir --no-deps --wheel-dir /usr/src/app/wheels -r requirements.txt


#########
# FINAL #
#########

# pull official base image
FROM python:3.9

# set work directory
WORKDIR /usr/src/app

# set environment variables
ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1

# These are only to able to run collect static
ENV DEBUG 1
ENV DJANGO_ALLOWED_HOSTS localhost 127.0.0.1 [::1]
ENV EMAIL_HOST_USER *****************
ENV EMAIL_HOST_PASSWORD ****************
ENV SQL_ENGINE django.db.backends.mysql
ENV SQL_DATABASE DevPlanner_prod
ENV SQL_USER luka
ENV SQL_PASSWORD kolo1234
ENV SQL_HOST 127.0.0.1
ENV SQL_PORT 3306

# install system dependencies
RUN apt-get update \
  && apt-get install python3-dev default-libmysqlclient-dev gcc  -y \
  && apt-get clean


# install dependencies
COPY --from=builder /usr/src/app/wheels /wheels
COPY --from=builder /usr/src/app/requirements.txt .
RUN pip install --upgrade pip
RUN pip install --no-cache /wheels/*

# copy project
COPY . .

RUN mkdir -p /usr/src/app/logs
RUN mkdir -p /usr/src/app/run
RUN mkdir -p /usr/src/app/static
RUN mkdir -p /usr/src/app/media


VOLUME /usr/src/app/logs/
VOLUME /usr/src/app/run/
VOLUME /usr/src/app/static/
VOLUME /usr/src/app/media/

ENTRYPOINT [ "/usr/src/app/bin/gunicorn_start" ]
